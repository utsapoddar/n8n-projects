{
  "active": true,
  "connections": {
    "AI Agent": {
      "main": [
        [
          {
            "index": 0,
            "node": "Get many events",
            "type": "main"
          }
        ]
      ]
    },
    "Every minute": {
      "main": [
        [
          {
            "index": 0,
            "node": "Get many messages",
            "type": "main"
          }
        ]
      ]
    },
    "Get many messages": {
      "main": [
        [
          {
            "index": 0,
            "node": "AI Agent",
            "type": "main"
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "index": 0,
            "node": "AI Agent",
            "type": "ai_languageModel"
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "index": 0,
            "node": "Structured Output Parser",
            "type": "ai_languageModel"
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "index": 0,
            "node": "AI Agent",
            "type": "ai_memory"
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "index": 0,
            "node": "AI Agent",
            "type": "ai_outputParser"
          }
        ]
      ]
    }
  },
  "isArchived": false,
  "name": "My workflow",
  "nodes": [
    {
      "credentials": {
        "discordBotApi": {
          "name": "Discord Bot account"
        }
      },
      "name": "Get many messages",
      "parameters": {
        "channelId": {
          "__rl": true,
          "cachedResultName": "simsy-uriel-chem-30",
          "cachedResultUrl": "https://discord.com/channels/1427815452943319082/1427823015231492266",
          "mode": "list",
          "value": "1427823015231492266"
        },
        "guildId": {
          "__rl": true,
          "cachedResultName": "Demo server",
          "cachedResultUrl": "https://discord.com/channels/1427815452943319082",
          "mode": "list",
          "value": "1427815452943319082"
        },
        "operation": "getAll",
        "options": {},
        "resource": "message"
      },
      "position": [
        -48,
        0
      ],
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "webhookId": "83a62d81-2b1c-428e-ae70-442b0d5792a6"
    },
    {
      "credentials": {
        "googleCalendarOAuth2Api": {
          "name": "Google Calendar account"
        }
      },
      "name": "Get many events",
      "parameters": {
        "calendar": {
          "__rl": true,
          "cachedResultName": "utsapoddarjobs@gmail.com",
          "mode": "list",
          "value": "utsapoddarjobs@gmail.com"
        },
        "operation": "getAll",
        "options": {},
        "timeMax": "={{ $json.sessionDate ? new Date($json.sessionDate + 'T23:59:59-06:00').toISOString() : '' }}",
        "timeMin": "={{ $json.sessionDate ? new Date($json.sessionDate + 'T00:00:00-06:00').toISOString() : '' }}"
      },
      "position": [
        0,
        560
      ],
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.3
    },
    {
      "credentials": {
        "googlePalmApi": {
          "name": "Google Gemini(PaLM) Api account 2"
        }
      },
      "name": "Google Gemini Chat Model",
      "parameters": {
        "modelName": "models/gemini-2.5-flash-lite-preview-06-17",
        "options": {}
      },
      "position": [
        208,
        80
      ],
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1
    },
    {
      "credentials": {
        "googlePalmApi": {
          "name": "Google Gemini(PaLM) Api account 2"
        }
      },
      "name": "Google Gemini Chat Model1",
      "parameters": {
        "options": {}
      },
      "position": [
        400,
        432
      ],
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1
    },
    {
      "name": "AI Agent",
      "parameters": {
        "hasOutputParser": true,
        "options": {},
        "promptType": "define",
        "text": "You are an extractor that reads short commands about tutoring sessions and outputs STRICT JSON for downstream nodes.\n\nContext:\n- Trigger phrases: “Event Update - Session Cancelled” or “Event Update - Session Scheduled”.\n- Messages will often include date/time and a short reason (for cancellations).\n- Channel names usually look like: student-name | teacher-name\n- Channel topic may include: studentEmail, teacherEmail, parentEmail, regular session time, etc.\n- If server/channel IDs are provided upstream, just pass them through; otherwise leave them empty strings \"\".\n\nRequired behavior:\n1) Detect action:\n   - If the text starts with “Event Update - Session Scheduled”, set action=\"DISCORD_EVENT_UPDATE\", eventType=\"SCHEDULED\".\n   - If it starts with “Event Update - Session Cancelled”, set action=\"DISCORD_EVENT_UPDATE\", eventType=\"CANCELLED\".\n\n2) Extract fields when present:\n   - sessionDate (YYYY-MM-DD)\n   - sessionStart (HH:mm, 24h)\n   - sessionEnd (HH:mm, 24h)\n   - reason (string; only for CANCELLED)\n   - studentName (from message or channel name)\n   - teacherName (from message or channel name)\n   - studentEmail, teacherEmail, parentEmail (from channel topic if present)\n   - calendarId (\"primary\" by default unless explicitly given)\n   - serverId, channelId (if provided upstream)\n   - timezone (\"America/Edmonton\" by default)\n\n3) If you can’t find a piece of data, output an empty string \"\" for that field.\n\n4) For any non-trigger message, set:\n   action=\"IGNORE\", eventType=\"\", reason=\"\".\n\nReturn ONLY this JSON object, nothing else:\n{\n  \"action\": \"DISCORD_EVENT_UPDATE\" | \"DAILY_SUMMARY\" | \"IGNORE\",\n  \"eventType\": \"SCHEDULED\" | \"CANCELLED\" | \"\",\n  \"sessionDate\": \"YYYY-MM-DD\",\n  \"sessionStart\": \"HH:mm\",\n  \"sessionEnd\": \"HH:mm\",\n  \"reason\": \"\",\n  \"studentName\": \"\",\n  \"teacherName\": \"\",\n  \"studentEmail\": \"\",\n  \"teacherEmail\": \"\",\n  \"parentEmail\": \"\",\n  \"calendarId\": \"primary\",\n  \"serverId\": \"\",\n  \"channelId\": \"\",\n  \"timezone\": \"America/Edmonton\"\n}\n\nExamples:\n\nINPUT:\nEvent Update - Session Cancelled | 2025-10-16 17:00-18:00 | Student: Alex Chen | Reason: Sick\nOUTPUT:\n{\"action\":\"DISCORD_EVENT_UPDATE\",\"eventType\":\"CANCELLED\",\"sessionDate\":\"2025-10-16\",\"sessionStart\":\"17:00\",\"sessionEnd\":\"18:00\",\"reason\":\"Sick\",\"studentName\":\"Alex Chen\",\"teacherName\":\"\",\"studentEmail\":\"\",\"teacherEmail\":\"\",\"parentEmail\":\"\",\"calendarId\":\"primary\",\"serverId\":\"\",\"channelId\":\"\",\"timezone\":\"America/Edmonton\"}\n\nINPUT:\nEvent Update - Session Scheduled | 2025-10-20 15:30-16:30 | Student: Maya S | Teacher: Mr. D | Calendar: primary\nOUTPUT:\n{\"action\":\"DISCORD_EVENT_UPDATE\",\"eventType\":\"SCHEDULED\",\"sessionDate\":\"2025-10-20\",\"sessionStart\":\"15:30\",\"sessionEnd\":\"16:30\",\"reason\":\"\",\"studentName\":\"Maya S\",\"teacherName\":\"Mr. D\",\"studentEmail\":\"\",\"teacherEmail\":\"\",\"parentEmail\":\"\",\"calendarId\":\"primary\",\"serverId\":\"\",\"channelId\":\"\",\"timezone\":\"America/Edmonton\"}\n\nINPUT:\nrandom chatter\nOUTPUT:\n{\"action\":\"IGNORE\",\"eventType\":\"\",\"sessionDate\":\"\",\"sessionStart\":\"\",\"sessionEnd\":\"\",\"reason\":\"\",\"studentName\":\"\",\"teacherName\":\"\",\"studentEmail\":\"\",\"teacherEmail\":\"\",\"parentEmail\":\"\",\"calendarId\":\"primary\",\"serverId\":\"\",\"channelId\":\"\",\"timezone\":\"America/Edmonton\"}\nReturn ONLY a single JSON object matching the example (no code fences, no text)\nCRITICAL FORMAT RULES:\n- Output only a single JSON object (no markdown, no code fences, no backticks, no explanations).\n- Include all keys shown in the example (even if values are empty strings).\n- Use eventType \"NONE\" when not applicable.\n\nInput message:\n{{$json.content}}\n\nChannel name: {{$json.channel.name || ''}}\nChannel ID: {{$json.channel_id || ''}}\nServer ID: {{$json.guild_id || ''}}\n\nReturn ONLY a single JSON object matching the output schema."
      },
      "position": [
        0,
        208
      ],
      "retryOnFail": true,
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2
    },
    {
      "name": "Every minute",
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 1
            }
          ]
        }
      },
      "position": [
        -256,
        0
      ],
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2
    },
    {
      "name": "Simple Memory",
      "parameters": {
        "contextWindowLength": 10,
        "sessionIdType": "customKey",
        "sessionKey": "session"
      },
      "position": [
        208,
        224
      ],
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3
    },
    {
      "name": "Structured Output Parser",
      "parameters": {
        "autoFix": true,
        "jsonSchemaExample": "{\n  \"action\": \"DISCORD_EVENT_UPDATE\",\n  \"eventType\": \"CANCELLED\",\n  \"sessionDate\": \"2025-10-16\",\n  \"sessionStart\": \"17:00\",\n  \"sessionEnd\": \"18:00\",\n  \"reason\": \"Sick\",\n  \"studentName\": \"Alex Chen\",\n  \"teacherName\": \"\",\n  \"studentEmail\": \"\",\n  \"teacherEmail\": \"\",\n  \"parentEmail\": \"\",\n  \"calendarId\": \"primary\",\n  \"serverId\": \"\",\n  \"channelId\": \"\",\n  \"timezone\": \"America/Edmonton\"\n}\n"
      },
      "position": [
        304,
        512
      ],
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "project": {
        "description": null,
        "icon": null,
        "name": "Utsa Poddar <utsapoddarjobs@gmail.com>",
        "projectRelations": [
          {
            "projectId": "b4yLNpicrf5hyXXM",
            "user": {
              "disabled": false,
              "email": "utsapoddarjobs@gmail.com",
              "firstName": "Utsa",
              "isPending": false,
              "lastActiveAt": "2025-10-15",
              "lastName": "Poddar",
              "mfaEnabled": false,
              "personalizationAnswers": {
                "companyType": "personal",
                "personalization_survey_n8n_version": "1.115.3",
                "personalization_survey_submitted_at": "2025-10-15T03:28:59.699Z",
                "reportedSource": "google"
              },
              "settings": {
                "dismissedCallouts": {
                  "preBuiltAgentsCalloutGoogleCalendar": true
                },
                "easyAIWorkflowOnboarded": true,
                "firstSuccessfulWorkflowId": "RJ56eMPXOhiTrqPG",
                "userActivated": true,
                "userActivatedAt": 1760506787034
              }
            },
            "userId": "eec12b35-549b-4d08-8ef7-f76f3d8395f3"
          }
        ],
        "type": "personal"
      },
      "projectId": "b4yLNpicrf5hyXXM",
      "role": "workflow:owner",
      "workflowId": "RJ56eMPXOhiTrqPG"
    }
  ],
  "staticData": {
    "node:Every minute": {
      "recurrenceRules": []
    }
  },
  "tags": [],
  "triggerCount": 1,
  "versionId": "0f249aad-b951-46a6-828f-51c318425092"
}